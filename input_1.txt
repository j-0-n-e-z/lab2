Человек в своей жизни часто сталкивается с работой с электронными документами. Удобное представление информации упрощает ее обработку. Но часто документ представлен в неудобном для работы формате. Например, формат PDF (Portable Document Format) позволяет просматривать документы в удобном для печати виде на любых устройствах, без искажений внешнего вида. Большинство современных средств печати поддерживает работу с данным форматом, что позволяет производить печать документов в данном формате без использования какого-либо программного обеспечения.
Трудность работы с форматом PDF заключается в том, что он не предоставляет пользователю возможности удобной обработки информации. Чаще всего для этого необходимо перевести файл в другой формат, например, текстовый или формат документа Word. В процессе преобразования файла из PDF в другой формат, может произойти искажение данных, утеря важных частей или извлечение ненужной информации. Прежде всего это может быть обусловлено тем, что PDF ориентирован на визуальное представление информации, а не на ее корректировку, извлечение, программное чтение.
В данной работе рассматривается процесс преобразования файла из формата PDF в формат TXT с извлечением исключительно текстовых блоков, несущих смысловую нагрузку. На рынке программного обеспечения существуют решения для извлечения текстовых данных из PDF-документов, такие как PDF Focus, PDF2Go или Tika, которые на выходе дают файл с расширением .txt или .docx, но он не всегда является тем, что пользователь ожидает. Могут возникать проблемы с представлением формул, графиков, таблиц, переходов между страницами, нумерацией страниц и т.д.
Актуальность данной работы связана с тем, что подобное решение будет полезно для таких задач как перевод текста, потому что часто для этого необходим «чистый текст» без графиков, формул, отступов и т.п. и многих других задач по работе с текстами, решаемых сегодня повсеместно.
Объектом является представление текстовой информации в электронном виде.
В качестве предмета исследования данной работы выступает формат документов PDF и процесс извлечения информации из этих документов.
Целью данной работы является разработка приложения для преобразования PDF-документов в текстовый формат с извлечением текстовых данных, несущих смысловую нагрузку. Для достижения цели необходимо выполнить следующие задачи:
1.	Провести анализ предметной области: рассмотреть формат PDF, произвести анализ решений для извлечения текстовых данных из документов в формате PDF;
2.	Сформировать требования для приложения на основе проведенного анализа;
3.	Выполнить проектирование приложения;
4.	Разработать прототип приложения;
5.	Провести тестирование.
В качестве платформы для реализации средства извлечения текста из PDF-документа был выбран Python версии 3.9, т.к. было решено использовать библиотеку для извлечения текстовых данных из PDF-документов PDFMiner, которая разработана на Python. Стоит отметить также, что Python имеет низкий порог входа ввиду простого синтаксиса, широко применяется и обладает мощной поддержкой и сообществом.
Для реализации клиента был выбран Angular 12 – фреймворк от компании Google для создания клиентских приложений. Angular предоставляет такую функциональность, как двустороннее связывание, позволяющее динамически изменять данные в одном месте интерфейса при изменении данных модели в другом, шаблоны, маршрутизация и так далее. Одной из ключевых особенностей Angular является то, что он использует в качестве языка программирования TypeScript [3]. 
В качестве сервера будет использоваться сервер на Node.js, который часто используется с Angular и требуется для его работы. Node.js – программная платформа, основанная на движке V8, превращающая JavaScript из узкоспециализированного языка в язык общего назначения. Node.js добавляет возможность JavaScript подключать другие внешние библиотеки, написанные на разных языках, обеспечивая вызовы к ним из JavaScript-кода [4]. Данная особенность позволит подключить на сервере скрипт, написанный на языке Python, который выполняет операцию извлечения текста из загруженного PDF-документа.
В качестве сред разработки будут использоваться PyCharm от компании JetBrains для написания скрипта на Python и WebStorm от той же компании для разработки клиента и сервера.
